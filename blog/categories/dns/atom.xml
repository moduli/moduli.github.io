<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DNS | Mycow's World]]></title>
  <link href="http://mycowsworld.com/blog/categories/dns/atom.xml" rel="self"/>
  <link href="http://mycowsworld.com/"/>
  <updated>2016-06-28T02:13:24-04:00</updated>
  <id>http://mycowsworld.com/</id>
  <author>
    <name><![CDATA[Michael Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting Up a GoDaddy Domain Name with GitHub]]></title>
    <link href="http://mycowsworld.com/blog/2015/07/12/setting-up-a-godaddy-domain-name-with-github/"/>
    <updated>2015-07-12T15:30:00-04:00</updated>
    <id>http://mycowsworld.com/blog/2015/07/12/setting-up-a-godaddy-domain-name-with-github</id>
    <content type="html"><![CDATA[<p>I wanted to try using GitHub&rsquo;s <a href="https://pages.github.com">Pages</a> feature to host my website. Turns out it was very simple to do, and the best part is it&rsquo;s free!</p>

<p>Here&rsquo;s a tutorial for setting up a GoDaddy domain name with this feature.</p>

<!-- more -->


<h2>Step 1: Register for a domain name</h2>

<p>Go to <a href="http://www.godaddy.com/">http://www.godaddy.com/</a> and purchase a domain name (e.g. mycowsworld.com)</p>

<p>This reserves a name that people will use to access your website. Now you&rsquo;ll need a place to store the files for your website.</p>

<h2>Step 2: Create a GitHub account</h2>

<p>Go to <a href="https://github.com">https://github.com</a> and sign up for an account.</p>

<h2>Step 3: Create a GitHub repository</h2>

<p>Follow the instructions <a href="https://pages.github.com">here</a> (scroll down). This creates a repository where you will store your website files.</p>

<h2>Step 4: Link your domain name to the GitHub repository</h2>

<p>Follow the instructions <a href="https://help.github.com/articles/adding-a-cname-file-to-your-repository/">here</a> to connect your domain name (e.g. www.mycowsworld.com) to the GitHub repository.</p>

<h2>Step 5: Configure DNS settings on GoDaddy</h2>

<ol>
<li>Log in to GoDaddy.com</li>
<li>Click <strong>My Account</strong> at the top of the screen</li>
<li>In the <em>DOMAINS</em> pane, expand the section (click the + button) and click <strong>Manage</strong> for the desired domain name.</li>
<li>Under the <em>Settings</em> tab &ndash;> Nameservers, click <strong>Manage</strong></li>
<li>Ensure that the <em>Setup Type</em> is set to <strong>Standard</strong> and save the changes. If you do make changes, note that it may take some time for the changes to propagate.</li>
<li>Under the <em>DNS Zone File</em> tab, click <strong>Add Record</strong></li>
<li>Select the <strong>CNAME</strong> Record Type</li>
<li>Under <em>Host</em>, enter in your <strong>www</strong></li>
<li>Under <em>Points to</em>, enter in the URL of the GitHub repository (e.g. username.github.io)</li>
<li>Click <strong>Finish</strong></li>
</ol>


<p>See <a href="https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/">this page</a> for more information.</p>

<p>It will take some time for the changes to get pushed out, but once that happens, www.URL.com should take you to your GitHub page.</p>

<h2>Step 6: Redirect URL.com to www.URL.com</h2>

<ol>
<li>Back in the GoDaddy page under the <em>Settings</em> tab &ndash;> Forwarding, click <strong>Manage</strong> under <em>Domain</em>.</li>
<li>Click <strong>Add Domain Forwarding</strong></li>
<li>Under <em>Forward To</em>, set it to the desired webpage (e.g. <a href="http://www.mycowsworld.com">http://www.mycowsworld.com</a>)</li>
<li>Under <em>Redirect Type</em>, set it to <strong>301 Permanent</strong></li>
<li>Under <em>Forward Settings</em>, select <strong>Forward Only</strong></li>
<li>Check the <strong>Update my nameservers and DNS Settings to support this change</strong></li>
<li>Click <strong>Add</strong></li>
</ol>


<h2>References</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/23097397/github-pages-setting-up-custom-domain">http://stackoverflow.com/questions/23097397/github-pages-setting-up-custom-domain</a></li>
<li><a href="https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/">https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/</a></li>
<li><a href="https://www.godaddy.com/help/managing-dns-for-your-domain-names-680">https://www.godaddy.com/help/managing-dns-for-your-domain-names-680</a></li>
<li><a href="https://pages.github.com">https://pages.github.com</a></li>
<li><a href="https://help.github.com/articles/adding-a-cname-file-to-your-repository/">https://help.github.com/articles/adding-a-cname-file-to-your-repository/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up a GoDaddy Domain Name with Amazon Web Services]]></title>
    <link href="http://mycowsworld.com/blog/2013/07/29/setting-up-a-godaddy-domain-name-with-amazon-web-services/"/>
    <updated>2013-07-29T22:55:00-04:00</updated>
    <id>http://mycowsworld.com/blog/2013/07/29/setting-up-a-godaddy-domain-name-with-amazon-web-services</id>
    <content type="html"><![CDATA[<p>One day, I decided I wanted to start a website. So then&hellip; now what? The following post describes the steps I took to purchase a domain name and get it set up with Amazon&rsquo;s web hosting services.</p>

<!-- more -->


<h2>Step 1: Register for a domain name</h2>

<p>Go to <a href="http://www.godaddy.com/">http://www.godaddy.com/</a> and purchase a domain name (e.g. mycowsworld.com)</p>

<p>This reserves a name that people will use to access your website. Now you&rsquo;ll need a place to store the files for your website.</p>

<h2>Step 2: Sign up for Amazon Web Services (AWS)</h2>

<p>Go to <a href="https://aws.amazon.com/">https://aws.amazon.com/</a> and sign up for an account.</p>

<p>Amazon has some nice services for cloud computing. One of these services can be used for website hosting (Amazon S3). AWS costs are scaled based on usage. My current costs are about 50 cents a month to host this blog.</p>

<h2>Step 3: Setup Amazon S3 (Simple Storage Service)</h2>

<p>In S3, you create &ldquo;buckets&rdquo; that will be used to store data. Each bucket can be configured individually, such as changing who has permissions to access a particular bucket.</p>

<p>In this case, we&rsquo;ll create two buckets: one for mywebsite.com and the other for www.mywebsite.com. We&rsquo;ll configure it so that the content will be stored in mywebsite.com and that requests for www.mywebsite.com will be redirected to mywebsite.com.</p>

<ol>
<li>Click <strong>My Account / Console</strong> on the top-right of the window and select <strong>AWS Management Console</strong></li>
<li>Click <strong>Services</strong> at the top-left of the window and select <strong>S3</strong></li>
<li>Create two buckets: <strong>mywebsite.com</strong> and <strong>www.mywebsite.com</strong>. Follow these instructions to create a bucket (<a href="http://docs.aws.amazon.com/AmazonS3/latest/UG/CreatingaBucket.html">http://docs.aws.amazon.com/AmazonS3/latest/UG/CreatingaBucket.html</a>).</li>
</ol>


<h3>Upload files to the mywebsite.com bucket</h3>

<ol>
<li>Click the <strong>mywebsite.com</strong> bucket</li>
<li>Click <strong>Upload</strong> at the top-left of the screen</li>
<li>Click <strong>Add Files</strong> on the pop-up that appears and select the various website files. Multiple files can be selected. (If you do not have website files, you can create a test file with the following code)
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Sample index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE HTML&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>    Hello World
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
<li>Click <strong>Start Upload</strong> to upload the files to the bucket</li>
</ol>


<h3>Configure bucket permissions to make it accessible to public</h3>

<ol>
<li>Click <strong>Properties</strong> at the top-right of the screen</li>
<li>Click <strong>Permissions</strong></li>
<li>Click <strong>Edit Bucket Policy</strong></li>
<li>Add the following to the text box (note: make sure you replace www.mywebsite.com with your own domain name)
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>    "Version":"2008-10-17",
</span><span class='line'>    "Statement":[{
</span><span class='line'>        "Sid":"AddPerm",
</span><span class='line'>        "Effect":"Allow",
</span><span class='line'>        "Principal": {"AWS": "*"},
</span><span class='line'>        "Action":["s3:GetObject"],
</span><span class='line'>        "Resource":["arn:aws:s3:::mywebsite.com/*"]
</span><span class='line'>    }]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure></notextile></div></li>
<li>Click <strong>Save</strong> on the pop-up window</li>
<li>Click <strong>Save</strong> in the *Permissions* pane</li>
</ol>


<h3>Configure bucket for website hosting</h3>

<ol>
<li>In the <em>Properties</em> pane, select <strong>Static Website Hosting</strong></li>
<li>Select <strong>Enable website hosting</strong></li>
<li>For <em>Index Document</em>, enter in the filename that will be used as the home page for your website. Typically this is <strong>index.html</strong> (make sure this file is uploaded to the bucket!)</li>
<li>Click <strong>Save</strong> in the <em>Static Website Hosting</em> pane</li>
<li>To test, click the <strong>Endpoint URL</strong> shown in the <em>Static Website Hosting</em> pane and see if your website loads.</li>
</ol>


<h3>Redirect www.mywebsite.com requests to mywebsite.com</h3>

<ol>
<li>Click <strong>All Buckets</strong> on the top left of the page</li>
<li>Click the <strong>www.mywebsite.com</strong> bucket</li>
<li>Click <strong>Properties</strong> on the top-right</li>
<li>Click <strong>Static Website Hosting</strong></li>
<li>Select <strong>Redirect all requests to another host name</strong></li>
<li>Type <strong>mywebsite.com</strong> in the <em>Redirect all requests to</em> field</li>
<li>Click <strong>Save</strong></li>
<li>To test, click the <strong>Endpoint URL</strong> shown in the <em>Static Website Hosting</em> pane and see if your website loads.</li>
</ol>


<h2>Step 4: Setup Amazon Route 53</h2>

<p>Amazon Route 53 will be used to link the domain name you purchased to the buckets you just created.</p>

<ol>
<li>Click <strong>Services</strong> at the top-left of the window and select <strong>Route 53</strong></li>
<li>Click <strong>Create Hosted Zone</strong> near the top of the screen</li>
<li>On the right side of the screen, enter your domain name (e.g. mywebsite.com)</li>
<li>Click <strong>Create Hosted Zone</strong> at the bottom of the panel (After you create a hosted zone, it should appear in the main panel with a check mark)</li>
<li>Click <strong>Go to Record Sets</strong> near the top of the screen</li>
</ol>


<h3>Create the “A” Record</h3>

<p>The &ldquo;A&rdquo; Record will point mywebsite.com to the S3 bucket</p>

<ol>
<li>Click <strong>Create Record Set</strong></li>
<li>Change <em>Type</em> to <strong>A &ndash; IPv4 address</strong></li>
<li>Change <em>Alias</em> to <strong>Yes</strong></li>
<li>Click the <em>Alias Target</em> field and select <strong>mywebsite.com (s3-website-*)</strong></li>
<li>Click <strong>Create Record Set</strong></li>
</ol>


<h3>Create the “CNAME” Record</h3>

<p>The &ldquo;CNAME&rdquo; Record will redirect www.mywebsite.com requests to mywebsite.com</p>

<ol>
<li>Click <strong>Create Record Set</strong></li>
<li>In the <em>Name</em> field, add <strong>www.</strong> before <em>mywebsite.com</em></li>
<li>Change <em>Type</em> to <strong>CNAME</strong></li>
<li>Change <em>Alias</em> to <strong>No</strong></li>
<li>In <em>Value</em>, enter in <strong>mywebsite.com</strong></li>
<li>Click <strong>Create Record Set</strong></li>
</ol>


<h2>Step 5: Configure the DNS provider (GoDaddy) to use Amazon Route 53 Name Servers</h2>

<p>As the DNS provider, you will need to tell GoDaddy to update the Domain Name Servers to point to the Amazon Name Servers.</p>

<ol>
<li>In the Record Sets page, note the 4 addresses in the &ldquo;NS&rdquo; entry (e.g. ns-123.awsdns-55.net)</li>
<li>Log in to GoDaddy.com</li>
<li>Click <strong>My Account</strong> at the top of the screen</li>
<li>In the <em>DOMAINS</em> pane, click <strong>Launch</strong></li>
<li>Click on the Domain Name that you want to edit</li>
<li>In the <em>Nameservers</em> section, select <strong>Set Nameservers</strong></li>
<li>Select <strong>I have specific nameservers for my domains</strong></li>
<li>Set the nameservers to the ones noted in the &ldquo;NS&rdquo; entry in Step 5.1 (you can omit the ending period)</li>
</ol>


<p>Tip from Kelton Manzanares: Make sure you delete the default CNAME record in Godaddy for www for your www. domain to work.</p>

<h2>Step 6: Test your website</h2>

<p>Try entering your domain name into your web browser. Both mywebsite.com and www.mywebsite.com should work! Note that it may take some time (up to several hours) before these settings are propagated to the various servers on the internet.</p>

<h2>What is happening?</h2>

<p>The following image helps describe the process when a user enters an address into the web browser.</p>

<p><a href="http://mycowsworld.com/images/diagrams/dns_flow_chart.jpg">
<img src="http://mycowsworld.com/images/diagrams/dns_flow_chart.jpg" alt="DNS Flow Chart" width="800" height="600"></a></p>

<ul>
<li>There are 13 Root Name Servers spread across the world. These servers parse the request for the top level domain (e.g. .com, .net, etc) and pass to the appropriate server</li>
<li>Authoritative Name Servers are defined in the Domain Name manager (e.g. GoDaddy.com). We defined the Name Servers to point to the ones provided by Amazon Route 53</li>
<li>In Amazon Route 53, we defined the A record to return the IP address of one of the S3 buckets that was created</li>
<li>DNS records have a “TTL” (time-to-live) setting which tells the ISP Name server how long it can hold a record before needing to get a new copy in case of changes.</li>
</ul>


<h2>References</h2>

<h3>Configuring AWS and GoDaddy settings</h3>

<ul>
<li><a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html">http://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html</a></li>
<li><a href="http://steveliles.github.io/pointing_a_domain_name_to_an_amazon_s3_bucket.html">http://steveliles.github.io/pointing_a_domain_name_to_an_amazon_s3_bucket.html</a></li>
<li><a href="http://support.godaddy.com/groups/web-hosting/forum/topic/using-amazon-s3-with-godaddy-registered-domain/?pc_split_value=1">http://support.godaddy.com/groups/web-hosting/forum/topic/using-amazon-s3-with-godaddy-registered-domain/?pc_split_value=1</a></li>
</ul>


<h3>DNS – How does it work?</h3>

<ul>
<li><a href="http://www.mygreatname.com/how-dns-works/e-04-how-dns-works.htm">http://www.mygreatname.com/how-dns-works/e-04-how-dns-works.htm</a></li>
<li><a href="http://dyn.com/blog/dns-why-its-important-how-it-works/">http://dyn.com/blog/dns-why-its-important-how-it-works/</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
